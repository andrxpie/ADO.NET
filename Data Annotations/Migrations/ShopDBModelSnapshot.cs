// <auto-generated />
using System;
using Data_Annotations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Annotations.Migrations
{
    [DbContext(typeof(ShopDB))]
    partial class ShopDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data_Annotations.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Drink"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Eat"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cloth"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Electronic"
                        },
                        new
                        {
                            Id = 5,
                            Name = "For Home"
                        });
                });

            modelBuilder.Entity("Data_Annotations.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "New York"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            Name = "Katowice"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 4,
                            Name = "Geneva"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 5,
                            Name = "Gamburg"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 6,
                            Name = "Denzili"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 7,
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 8,
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 9,
                            Name = "Nuuk"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 10,
                            Name = "Hofn"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 11,
                            Name = "London"
                        });
                });

            modelBuilder.Entity("Data_Annotations.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "USA"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = 5,
                            Name = "German"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Japan"
                        },
                        new
                        {
                            Id = 8,
                            Name = "China"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Greenland"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Iceland"
                        },
                        new
                        {
                            Id = 11,
                            Name = "UK"
                        });
                });

            modelBuilder.Entity("Data_Annotations.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Boss"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Accountant"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Worker"
                        });
                });

            modelBuilder.Entity("Data_Annotations.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 4,
                            Discount = 12f,
                            IsInStock = true,
                            Name = "G502 X PLUS",
                            Price = 4799m,
                            Quantity = 15
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 4,
                            Discount = 30f,
                            IsInStock = true,
                            Name = "G102 LightSync",
                            Price = 4799m,
                            Quantity = 15
                        });
                });

            modelBuilder.Entity("Data_Annotations.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParkingArea")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("Data_Annotations.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShopId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "ShopsId");

                    b.HasIndex("ShopsId");

                    b.ToTable("ProductShop");
                });

            modelBuilder.Entity("Data_Annotations.City", b =>
                {
                    b.HasOne("Data_Annotations.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Data_Annotations.Product", b =>
                {
                    b.HasOne("Data_Annotations.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Data_Annotations.Shop", b =>
                {
                    b.HasOne("Data_Annotations.City", "City")
                        .WithMany("Shops")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Data_Annotations.Worker", b =>
                {
                    b.HasOne("Data_Annotations.Position", "Position")
                        .WithMany("Workers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Annotations.Shop", "Shop")
                        .WithMany("Workers")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.HasOne("Data_Annotations.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Annotations.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data_Annotations.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Data_Annotations.City", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("Data_Annotations.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Data_Annotations.Position", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("Data_Annotations.Shop", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
